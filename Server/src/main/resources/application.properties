# DataSource settings set here your own configurations for the database
# connection. In this example we have netgloo_blog as database name and
# root as username and password.
spring.datasource.url = jdbc:mysql://localhost:3306/study_buddy?useUnicode=yes&characterEncoding=UTF-8
spring.datasource.username = root
spring.datasource.password = ----------CHANGE_BEFORE_PROD----------

hibernate.connection.characterEncoding=utf-8
hibernate.connection.useUnicode=true
hibernate.connection.charSet=UTF-8

# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1

# Show or not log for each sql query
spring.jpa.show-sql = true

# Hibernate ddl auto (create, create-drop, update)
spring.jpa.hibernate.ddl-auto = update
# Naming strategy
spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy

# Use spring.jpa.properties. for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager)

# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect
logging.level.org.springframework.web=DEBUG
logging.level.org.hibernate=ERROR
#logging.path=C:\\wamp\\www\\studdy-buddy log

#awsKeys.file = C:\\wamp\\www\\accessKeys\\accessKeys.csv
#mailKeys.file = C:\\wamp\\www\\mailKeys\\mailKeys.csv
multipart.maxFileSize = 10240KB
multipart.maxRequestSize = 10240KB
#clientDomain = http://or.test.com
url = http://www.studybuddytau.ml
#production 
logging.path=/var/log/study_buddy
awsKeys.file = /var/study_buddy/accessKeys.csv
mailKeys.file = /var/study_buddy/mailKeys.csv
clientDomain = http://www.studybuddytau.ml
